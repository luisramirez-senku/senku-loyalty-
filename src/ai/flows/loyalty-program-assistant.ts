// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A virtual assistant powered by Gemini to answer loyalty program questions.
 *
 * - loyaltyProgramAssistant - A function that handles the virtual assistant process.
 * - LoyaltyProgramAssistantInput - The input type for the loyaltyProgramAssistant function.
 * - LoyaltyProgramAssistantOutput - The return type for the loyaltyProgramAssistant function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const LoyaltyProgramAssistantInputSchema = z.object({
  query: z.string().describe('The query from the user about the loyalty program.'),
  loyaltyProgramDetails: z.string().describe('Details about the loyalty program, including rules, benefits, and available rewards.'),
  customerInformation: z.string().describe('Information about the customer, including their points balance, tier, and purchase history.'),
});
export type LoyaltyProgramAssistantInput = z.infer<typeof LoyaltyProgramAssistantInputSchema>;

const LoyaltyProgramAssistantOutputSchema = z.object({
  response: z.string().describe('The response to the user query, providing helpful information and resolving any issues.'),
});
export type LoyaltyProgramAssistantOutput = z.infer<typeof LoyaltyProgramAssistantOutputSchema>;

export async function loyaltyProgramAssistant(input: LoyaltyProgramAssistantInput): Promise<LoyaltyProgramAssistantOutput> {
  return loyaltyProgramAssistantFlow(input);
}

const prompt = ai.definePrompt({
  name: 'loyaltyProgramAssistantPrompt',
  input: {schema: LoyaltyProgramAssistantInputSchema},
  output: {schema: LoyaltyProgramAssistantOutputSchema},
  prompt: `You are a virtual assistant for a loyalty program. Your goal is to answer user questions and resolve common issues related to the program.

  Here are the details of the loyalty program:
  {{loyaltyProgramDetails}}

  Here is some information about the customer:
  {{customerInformation}}

  Now, respond to the following user query:
  {{query}}

  Provide a clear, concise, and helpful response.  If the user is asking to perform an action that is not possible, explain why it is not possible.`,
});

const loyaltyProgramAssistantFlow = ai.defineFlow(
  {
    name: 'loyaltyProgramAssistantFlow',
    inputSchema: LoyaltyProgramAssistantInputSchema,
    outputSchema: LoyaltyProgramAssistantOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
